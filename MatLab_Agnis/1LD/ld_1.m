clc## atvasin?t p?c x# syms x## e-studiju piemers# f=x^2-log(x+3)-2;## 1. k?rtas atvasin?jums# df=diff(f)## 2. k?rtas atvasin?jums# d2f=diff(f,2)# g=sqrt(log(x+3)+2);# dg=diff(g)# x^2-log(x+3)-2=0 => x=sqrt(log(x+3)+2) # mekl? x v?rt?bu sadalot doto interv?lu nor?d?taj? da?u daudzum?x=linspace(-2,-1,100);# p?rveido uzdevum? doto funkciju form?, kur pirms */^ liek punktuf=@(x) x.^2-log(x+3)-2;# nor?da 1. k?rtas atvasin?jumu, kas tika ieg?ts ar augst?k atrodamo aizkoment?to funkcijudf=@(x) 2.*x - 1./(x + 3);# 2. k?rtas atvasin?jums t?d? paš? veid?d2f=@(x) 1./(x + 3).^2 + 2;# veic g funckijas izteikumu, kur doto funkciju j?p?rraksta, lai vien? pus? ir x, otr? x saturošsg=@(x) -sqrt(log(x+3)+2);# atrod atvasin?jumu ar aizkoment?to funkcijudg=@(x) 1./(2.*(log(x + 3) + 2).^(1./2).*(x + 3));# veic grafika att?lošanu, t.i. izveido 2x3 strukt?ru un z?m?jam pirmaj? subplot(2,3,1); # aizpildam to r?ti?u ar grafiku, kura ir nor?d?ta iepriekš?j? komand? k? 3. argumentsplot(x,f(x));# iesl?dz optional r?ti?asgridsubplot(2,3,2);# pirm?s k?rtas atvasin?juma grafiksplot(x,df(x));gridsubplot(2,3,3);# otr?s k?rtas atvasin?juma grafiksplot(x,d2f(x));gridsubplot(2,3,4);plot(x,g(x));gridsubplot(2,3,5);plot(x,dg(x));grid# robežu diapazonsa=-2;b=-1;# precizit?ticeps=0.001;# attiec?go funkciju main?gie ar respekt?vajiem argumentiem,# kas veic apr??inubisection(f,a,b,eps);       # interv?la dal?šanaregulafalsi(f,d2f,a,b,eps); # hordunewton(f,df,d2f,a,b,eps)    # pieskarufixedpoint(g,a,eps)         # iter?ciju